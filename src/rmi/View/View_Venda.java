/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rmi.View;

import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;
import rmi.Interface.IControllerBase;
import rmi.Model.Cliente;
import rmi.Model.Pessoa;
import rmi.Model.Produto;
import rmi.Util.conexao_server;

/**
 *
 * @author Bruno
 */
public class View_Venda extends javax.swing.JFrame {

    /**
     * Creates new form View_Venda
     */
    
    private int IDPessoa;
    
    public View_Venda() {
        initComponents();
        Panel_Venda.setVisible(false);
        Label_ProdutoNaoEncontrado.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextField_Cpf = new javax.swing.JFormattedTextField();
        Btn_Pesquisar = new javax.swing.JButton();
        Panel_Venda = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        TextField_IDProduto = new javax.swing.JFormattedTextField();
        btn_Adicionar = new javax.swing.JButton();
        Label_ProdutoNaoEncontrado = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TextField_Quantidade = new javax.swing.JFormattedTextField();
        btn_GerarOrdem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Venda");

        jLabel2.setText("CPF do Cliente:");

        try {
            TextField_Cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TextField_Cpf.setName("TextField_Cpf"); // NOI18N
        TextField_Cpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_CpfActionPerformed(evt);
            }
        });

        Btn_Pesquisar.setText("Pesquisar");
        Btn_Pesquisar.setName("btn_pesquisar"); // NOI18N
        Btn_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_PesquisarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "ID", "Produto", "Preço", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("ID do Produto:");

        TextField_IDProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        TextField_IDProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_IDProdutoActionPerformed(evt);
            }
        });

        btn_Adicionar.setText("Adicionar");
        btn_Adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AdicionarActionPerformed(evt);
            }
        });

        Label_ProdutoNaoEncontrado.setForeground(new java.awt.Color(204, 0, 0));
        Label_ProdutoNaoEncontrado.setText("Produto não Encontrado!");

        jLabel4.setText("Quantidade:");

        TextField_Quantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        btn_GerarOrdem.setText("Gerar Ordem");

        javax.swing.GroupLayout Panel_VendaLayout = new javax.swing.GroupLayout(Panel_Venda);
        Panel_Venda.setLayout(Panel_VendaLayout);
        Panel_VendaLayout.setHorizontalGroup(
            Panel_VendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_VendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_VendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(Panel_VendaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(TextField_IDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(TextField_Quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Adicionar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_VendaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Label_ProdutoNaoEncontrado)
                        .addGap(211, 211, 211)))
                .addContainerGap())
            .addGroup(Panel_VendaLayout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(btn_GerarOrdem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel_VendaLayout.setVerticalGroup(
            Panel_VendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_VendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_VendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TextField_IDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(TextField_Quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Adicionar))
                .addGap(18, 18, 18)
                .addComponent(Label_ProdutoNaoEncontrado)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_GerarOrdem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(TextField_Cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Btn_Pesquisar)
                .addGap(111, 111, 111))
            .addGroup(layout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panel_Venda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextField_Cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Pesquisar))
                .addGap(18, 18, 18)
                .addComponent(Panel_Venda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_PesquisarActionPerformed
<<<<<<< HEAD
        valoresDosCampos();       
=======
        valoresDosCampos();
        //se o cpf existir, o Panel de venda é aberto
        Panel_Venda.setVisible(true);
>>>>>>> 093338bc58ad35bbc8bdeb4692284de21e54bb97
    }//GEN-LAST:event_Btn_PesquisarActionPerformed

    private void TextField_CpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_CpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_CpfActionPerformed

    private void TextField_IDProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_IDProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_IDProdutoActionPerformed

<<<<<<< HEAD
    private void btn_AdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AdicionarActionPerformed
        pesquisaProduto();
    }//GEN-LAST:event_btn_AdicionarActionPerformed

    private void valoresDosCampos(){
       String cpf = TextField_Cpf.getText().toString();
       if(!cpf.equals(null)){
           pesquisaPessoa(cpf);
=======
    private void valoresDosCampos(){
       String cpf = TextField_Cpf.getText().toString();
       if(!cpf.equals(null)){
           pesquisaCliente(cpf);
>>>>>>> 093338bc58ad35bbc8bdeb4692284de21e54bb97
       }else{
           JOptionPane.showMessageDialog(null, "É necessário preencher o campo!", 
                        null,JOptionPane.ERROR_MESSAGE);
       }
    }
    
<<<<<<< HEAD
    private void pesquisaPessoa(String cpf){
=======
    private void pesquisaCliente(String cpf){
>>>>>>> 093338bc58ad35bbc8bdeb4692284de21e54bb97
        try{
            Pessoa pessoa = new Pessoa();
            //criar objeto da interface, usa o lookpu para pegar a chave
            //conexa_server possui o ip e o registry para definir a conexao com o server
            IControllerBase objetoRemoto =(IControllerBase)conexao_server.conexao().lookup("pessoa");
            System.out.println("Consultando...");
            pessoa = (Pessoa) objetoRemoto.findBy("cpf", cpf);
            //Passa o id da pessoa para o atributo
            IDPessoa = pessoa.getIdPessoa();
            if(IDPessoa == 0){
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!", 
                        null,JOptionPane.ERROR_MESSAGE);
            }else{
<<<<<<< HEAD
                //se o cpf de pessoa for encontrado, é pesquisado se ele corresponde a uma cliente
                pesquisaCliente(IDPessoa);
            }
                                   
        }catch(RemoteException e){
            System.out.println(e.getMessage());
        }catch(NotBoundException e){
            System.out.println(e.getMessage());
        }
    }
    
    private void pesquisaCliente(int idPessoa){
        try{
            Cliente cliente = new Cliente();
            //criar objeto da interface, usa o lookpu para pegar a chave
            //conexa_server possui o ip e o registry para definir a conexao com o server
            IControllerBase objetoRemoto =(IControllerBase)conexao_server.conexao().lookup("cliente");
            System.out.println("Consultando Cliente...");
            cliente = (Cliente) objetoRemoto.findBy("Pessoa_idPessoa", idPessoa);
            if(cliente.getIdCliente() == 0){
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!", 
                        null,JOptionPane.ERROR_MESSAGE);
            }else if(cliente.getIdCliente() != 0){
                //se o id for encontrado, os campos para edição são ativados
                Panel_Venda.setVisible(true);
=======
                //se o id for encontrado, os campos para edição são ativados
                Panel_Venda.setVisible(true);
                
>>>>>>> 093338bc58ad35bbc8bdeb4692284de21e54bb97
            }
                                   
        }catch(RemoteException e){
            System.out.println(e.getMessage());
        }catch(NotBoundException e){
            System.out.println(e.getMessage());
        }
    }
    
<<<<<<< HEAD
    private void pesquisaProduto(){       
        try{
            String aux = TextField_IDProduto.getText().toString();
            int idProduto;
            if(aux.equals(null)){
                JOptionPane.showMessageDialog(null, "Produto não encontrado!", 
                        null,JOptionPane.ERROR_MESSAGE);
            }else{
                //Converte a chave para Int
                idProduto = Integer.parseInt(aux);
                
                Produto produto = new Produto();
                //criar objeto da interface, usa o lookpu para pegar a chave
                //conexa_server possui o ip e o registry para definir a conexao com o server
                IControllerBase objetoRemoto =(IControllerBase)conexao_server.conexao().lookup("produto");
                System.out.println("Consultando Produto...");
                produto = (Produto) objetoRemoto.findBy("idProduto", idProduto);
                if(produto.getIdProduto() == 0){
                    JOptionPane.showMessageDialog(null, "Produto não encontrado!", 
                        null,JOptionPane.ERROR_MESSAGE);
                }else{
                    
                }
            }                        
        }catch(RemoteException e){
            System.out.println(e.getMessage());
        }catch(NotBoundException e){
            System.out.println(e.getMessage());
        }
    }
    
=======
>>>>>>> 093338bc58ad35bbc8bdeb4692284de21e54bb97
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_Venda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Pesquisar;
    private javax.swing.JLabel Label_ProdutoNaoEncontrado;
    private javax.swing.JPanel Panel_Venda;
    private javax.swing.JFormattedTextField TextField_Cpf;
    private javax.swing.JFormattedTextField TextField_IDProduto;
    private javax.swing.JFormattedTextField TextField_Quantidade;
    private javax.swing.JButton btn_Adicionar;
    private javax.swing.JButton btn_GerarOrdem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
