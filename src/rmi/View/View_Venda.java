/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rmi.View;

import Application.formataData;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import rmi.Interface.IControllerBase;
import rmi.Model.Cliente;
import rmi.Model.OrdemServico;
import rmi.Model.Pessoa;
import rmi.Model.Produto;
import rmi.Model.Venda;
import rmi.Util.conexao_server;
import static rmi.View.Login.IDFUNCIONARIO;

/**
 *
 * @author Bruno
 */
public class View_Venda extends javax.swing.JFrame {

    /**
     * Creates new form View_Venda
     */
    private int IDPessoa;
    private int IDCliente;
    private int IDVenda;

    public View_Venda() {
        initComponents();
        Panel_Venda.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextField_Cpf = new javax.swing.JFormattedTextField();
        Btn_Pesquisar = new javax.swing.JButton();
        Panel_Venda = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TextField_IDProduto = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        TextField_Quantidade = new javax.swing.JFormattedTextField();
        btn_GerarOrdem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Venda");

        jLabel2.setText("CPF do Cliente:");

        try {
            TextField_Cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TextField_Cpf.setName("TextField_Cpf"); // NOI18N
        TextField_Cpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_CpfActionPerformed(evt);
            }
        });

        Btn_Pesquisar.setText("Pesquisar");
        Btn_Pesquisar.setName("btn_pesquisar"); // NOI18N
        Btn_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_PesquisarActionPerformed(evt);
            }
        });

        jLabel3.setText("ID do Produto:");

        TextField_IDProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        TextField_IDProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_IDProdutoActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantidade:");

        TextField_Quantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        btn_GerarOrdem.setText("Gerar Ordem");
        btn_GerarOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GerarOrdemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_VendaLayout = new javax.swing.GroupLayout(Panel_Venda);
        Panel_Venda.setLayout(Panel_VendaLayout);
        Panel_VendaLayout.setHorizontalGroup(
            Panel_VendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_VendaLayout.createSequentialGroup()
                .addGap(237, 237, 237)
                .addComponent(btn_GerarOrdem)
                .addContainerGap(243, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_VendaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(TextField_IDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(TextField_Quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        Panel_VendaLayout.setVerticalGroup(
            Panel_VendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_VendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_VendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TextField_IDProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(TextField_Quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_GerarOrdem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(TextField_Cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Btn_Pesquisar)
                .addGap(111, 111, 111))
            .addGroup(layout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panel_Venda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextField_Cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Pesquisar))
                .addGap(18, 18, 18)
                .addComponent(Panel_Venda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_PesquisarActionPerformed
        valoresDosCampos();
    }//GEN-LAST:event_Btn_PesquisarActionPerformed

    private void TextField_CpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_CpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_CpfActionPerformed

    private void TextField_IDProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_IDProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_IDProdutoActionPerformed

    private void btn_GerarOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GerarOrdemActionPerformed
        pesquisaProduto();
    }//GEN-LAST:event_btn_GerarOrdemActionPerformed

    private void valoresDosCampos() {
        String cpf = TextField_Cpf.getText().toString();
        if (!cpf.equals(null)) {
            pesquisaPessoa(cpf);
        } else {
            JOptionPane.showMessageDialog(null, "É necessário preencher o campo!",
                    null, JOptionPane.ERROR_MESSAGE);
        }
    }

    private void pesquisaPessoa(String cpf) {
        try {
            Pessoa pessoa = new Pessoa();
            //criar objeto da interface, usa o lookpu para pegar a chave
            //conexa_server possui o ip e o registry para definir a conexao com o server
            IControllerBase objetoRemoto = (IControllerBase) conexao_server.conexao().lookup("pessoa");
            System.out.println("Consultando...");
            pessoa = (Pessoa) objetoRemoto.findBy("cpf", cpf);
            //Passa o id da pessoa para o atributo
            IDPessoa = pessoa.getIdPessoa();
            if (IDPessoa == 0) {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!",
                        null, JOptionPane.ERROR_MESSAGE);
            } else {
                //se o cpf de pessoa for encontrado, é pesquisado se ele corresponde a uma cliente
                pesquisaCliente(IDPessoa);
            }

        } catch (RemoteException e) {
            System.out.println(e.getMessage());
        } catch (NotBoundException e) {
            System.out.println(e.getMessage());
        }
    }

    private void pesquisaCliente(int idPessoa) {
        try {
            Cliente cliente = new Cliente();
            //criar objeto da interface, usa o lookpu para pegar a chave
            //conexa_server possui o ip e o registry para definir a conexao com o server
            IControllerBase objetoRemoto = (IControllerBase) conexao_server.conexao().lookup("cliente");
            System.out.println("Consultando Cliente...");
            cliente = (Cliente) objetoRemoto.findBy("Pessoa_idPessoa", idPessoa);
            IDCliente = cliente.getIdCliente();
            if (IDCliente == 0) {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!",
                        null, JOptionPane.ERROR_MESSAGE);
            } else if (cliente.getIdCliente() != 0) {
                //se o id for encontrado, os campos para edição são ativados
                Panel_Venda.setVisible(true);
            }

        } catch (RemoteException e) {
            System.out.println(e.getMessage());
        } catch (NotBoundException e) {
            System.out.println(e.getMessage());
        }
    }

    private void pesquisaProduto() {
        try {
            String aux = TextField_IDProduto.getText().toString();
            String aux2 = TextField_Quantidade.getText().toString();
            int idProduto, quantidade;
            if (aux.equals("") || aux2.equals("")) {
                JOptionPane.showMessageDialog(null, "Campos vazios!",
                        null, JOptionPane.ERROR_MESSAGE);
            } else {
                //Converte a chave para Int
                idProduto = Integer.parseInt(aux);
                quantidade = Integer.parseInt(aux2);

                if (idProduto > 0 && quantidade > 0) {
                    Produto produto = new Produto();
                    //criar objeto da interface, usa o lookpu para pegar a chave
                    //conexa_server possui o ip e o registry para definir a conexao com o server
                    IControllerBase objetoRemoto = (IControllerBase) conexao_server.conexao().lookup("produto");
                    System.out.println("Consultando Produto...");
                    produto = (Produto) objetoRemoto.findBy("idProduto", idProduto);
                    if (produto.getIdProduto() == 0) {
                        JOptionPane.showMessageDialog(null, "Produto não encontrado!",
                                null, JOptionPane.ERROR_MESSAGE);
                    } else {
                        geraVenda(idProduto, quantidade);
                    }
                }

            }
        } catch (RemoteException e) {
            System.out.println(e.getMessage());
        } catch (NotBoundException e) {
            System.out.println(e.getMessage());
        }
    }

    private int geraIdVenda() {
        Random gerador = new Random();
	IDVenda = gerador.nextInt(1000);
        //System.out.println("Chave: "+idVenda);
        return IDVenda;
    }

    private void geraVenda(int idProduto, int quantidade) {
        try {

            Venda venda = new Venda();
            String vendaGerada;
            //criar objeto da interface, usa o lookpu para pegar a chave
            //conexa_server possui o ip e o registry para definir a conexao com o server
            IControllerBase objetoRemoto = (IControllerBase) conexao_server.conexao().lookup("venda");

            //recebe o idVenda
            venda.setIdVenda(geraIdVenda());
            venda.setCliente_idCliente(IDCliente);
            venda.setProduto_idProduto(idProduto);
            venda.setQuantidade(quantidade);

            System.out.println("Gerando venda...");

            vendaGerada = objetoRemoto.create(venda);

            geraOrdem(IDFUNCIONARIO, IDVenda);
        } catch (RemoteException e) {
            System.out.println(e.getMessage());
        } catch (NotBoundException e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void geraOrdem(int idFuncionario, int idVenda){
        try {

            OrdemServico ordem = new OrdemServico();
            //criar objeto da interface, usa o lookpu para pegar a chave
            //conexa_server possui o ip e o registry para definir a conexao com o server
            IControllerBase objetoRemoto = (IControllerBase) conexao_server.conexao().lookup("ordem_servico");
            
            //recebe a data atual
            Date data = formataData.dataAtual();
            
            ordem.setDataExp(data);
            ordem.setIdFuncionario(IDFUNCIONARIO);
            //Estado = 0 - incompleto, 1 - completo 
            ordem.setEstado(0);
            ordem.setVendaId(idVenda);
  

            System.out.println("Gerando Ordem de serviço...");

            JOptionPane.showMessageDialog(null, objetoRemoto.create(ordem),
                                null, JOptionPane.INFORMATION_MESSAGE);

            
        } catch (RemoteException e) {
            System.out.println(e.getMessage());
        } catch (NotBoundException e) {
            System.out.println(e.getMessage());
        }
        
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_Venda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Pesquisar;
    private javax.swing.JPanel Panel_Venda;
    private javax.swing.JFormattedTextField TextField_Cpf;
    private javax.swing.JFormattedTextField TextField_IDProduto;
    private javax.swing.JFormattedTextField TextField_Quantidade;
    private javax.swing.JButton btn_GerarOrdem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
